[root]
-- 转换后的目标格式(lni, obj, slk)
mode = nil
-- 使用谁的mpq(default, custom)
mpq = default
-- 使用的语言
lang = zh-CN

[slk]
-- 是否分析slk文件
read_slk = true
-- 分析slk时寻找id最优解的次数,0表示无限,寻找次数越多速度越慢
find_id_times = 10
-- 移除与模板完全相同的数据
remove_same = false
-- 移除只在WE使用的文件
remove_we_only = true
-- 移除没有引用的对象
remove_unuse_object = true
-- mdx压缩
mdx_squf = true
-- 优化装饰物
slk_doodad = true
-- 优化脚本
optimize_jass = true
-- 混淆脚本
confusion = 'ABCDEFG'
-- 转换为地图还是目录(mpq, dir)
target_storage = [[mpq]]

[lni]
-- 是否分析slk文件
read_slk = false
-- 分析slk时寻找id最优解的次数,0表示无限,寻找次数越多速度越慢
find_id_times = 0
-- 移除与模板完全相同的数据
remove_same = false
-- 移除只在WE使用的文件
remove_we_only = false
-- 移除没有引用的对象
remove_unuse_object = false
-- mdx压缩
mdx_squf = false
-- 优化装饰物
slk_doodad = false
-- 优化脚本
optimize_jass = false
-- 混淆脚本
confusion = nil
-- 转换为地图还是目录(mpq, dir)
target_storage = [[dir]]

[obj]
-- 是否分析slk文件
read_slk = false
-- 分析slk时寻找id最优解的次数,0表示无限,寻找次数越多速度越慢
find_id_times = 0
-- 移除与模板完全相同的数据
remove_same = true
-- 移除只在WE使用的文件
remove_we_only = false
-- 移除没有引用的对象
remove_unuse_object = false
-- mdx压缩
mdx_squf = false
-- 优化装饰物
slk_doodad = false
-- 优化脚本
optimize_jass = false
-- 混淆脚本
confusion = nil
-- 转换为地图还是目录(mpq, dir)
target_storage = [[mpq]]
